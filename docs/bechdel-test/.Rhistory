npb2 %>%
#group_by(GENDER) %>%
summarise(n = n(),
percent_transfer = (sum(ADMIT_LEVEL == 1, na.rm = T)/n)*100,
percent_urm = (sum(IS_URM == "1" , na.rm = T)/n)*100,
percent_esl = (sum(ESL == "1",  na.rm = T)/n)*100,
percent_first_gen =  (sum(FIRST_GENERATION == "1",  na.rm = T)/n)*100,
percent_low_income = (sum(LOW_INCOME == "1",  na.rm = T)/n)*100,
percent_international = (sum(STARTED_INTERNATIONAL == "1")/n)*100,
avg_gpa_prior = mean(NPB_101_PRIOR_OVERALL_GPA, na.rm = T),
avg_bis2A = mean(BIS2A_NUMGRADE, na.rm = T),
avg_bis2B = mean(BIS2B_NUMGRADE, na.rm = T),
avg_bis2C = mean(BIS2C_NUMGRADE, na.rm = T),
avg_che2A = mean(CHE2A_NUMGRADE, na.rm = T),
avg_NPB = mean(NPB_101_NUMGRADE, na.rm = T))
npb2 %>%
#group_by(GENDER) %>%
ungroup() %>%
summarise(n = n(),
percent_transfer = (sum(ADMIT_LEVEL == 1, na.rm = T)/n)*100,
percent_urm = (sum(IS_URM == "1" , na.rm = T)/n)*100,
percent_esl = (sum(ESL == "1",  na.rm = T)/n)*100,
percent_first_gen =  (sum(FIRST_GENERATION == "1",  na.rm = T)/n)*100,
percent_low_income = (sum(LOW_INCOME == "1",  na.rm = T)/n)*100,
percent_international = (sum(STARTED_INTERNATIONAL == "1")/n)*100,
avg_gpa_prior = mean(NPB_101_PRIOR_OVERALL_GPA, na.rm = T),
avg_bis2A = mean(BIS2A_NUMGRADE, na.rm = T),
avg_bis2B = mean(BIS2B_NUMGRADE, na.rm = T),
avg_bis2C = mean(BIS2C_NUMGRADE, na.rm = T),
avg_che2A = mean(CHE2A_NUMGRADE, na.rm = T),
avg_NPB = mean(NPB_101_NUMGRADE, na.rm = T))
#for model selection using MuMIn, all variables need to have no NAs. this includes dependent variables
#npb2 dataset from npb_dataset_include2019.R has variables in numeric format and no NAs
#n = 13,131
options(na.action = na.fail) #models will not run if NAs present
#Table 4 in MS.
best <- lmer(NPB_101_NUMGRADE ~ NPB_101_PRIOR_OVERALL_GPA  + GENDER + IS_URM + FIRST_GENERATION + NPB_101_PRIOR_OVERALL_GPA*GENDER + (1 | NPB_101_SECTION), data = npb2, REML = F)
summary(best)
#model table
tab_model(best, show.se =  T)
#import data
dat <-read.csv("~/Documents/projects/PRL_experience/prl_experience_brains_data_updated.csv", stringsAsFactors = F)
#sample size
colnames(dat)
dat %>%
filter(active_nest_collection == 0) %>%
group_by(experience_chicks, sex) %>%
tally()
#experienced birds: ranges of chicks hatched
dat %>%
filter(experience_chicks == 1) %>%
group_by(nest_no = cut(total_chicks, breaks = seq(0,20,5)), sex) %>%
tally()
#inexperienced birds by age
dat %>%
filter(active_nest_collection == 0) %>%
drop_na(age_years) %>%
filter(experience_nests == 0) %>%
group_by(age = cut(age_years, breaks = seq(0,4,1)), sex) %>%
tally()
#all birds sample size
dat %>%
filter(active_nest_collection == 0) %>%
group_by(experience_chicks, age = cut(age_years, breaks = seq(0,4,1)), sex) %>%
tally()
#experienced birds: by nest no and age
dat %>%
drop_na(age_years)%>%
filter(experience == "y") %>%
group_by(nest_no = cut(nest_count, breaks = seq(0,30,10)), age = cut(age_years, breaks = seq(0,4,1))) %>%
tally()
dat %>%
filter(active_nest_collection == 0) %>%
group_by(experience_chicks, age = cut(age_years, breaks = seq(0,4,1)), sex)
dat %>%
filter(active_nest_collection == 0) %>%
group_by(experience_chicks, age = cut(age_years, breaks = seq(0,4,1)), sex) %>%
tally()
dat %>%
filter(active_nest_collection == 0) %>%
mutate(age_group = cut(age_years, breaks = seq(0,4,1))) %>%
select(id, sex, experience_chicks, age_years, age_group)
dat %>%
filter(active_nest_collection == 0) %>%
mutate(age_group = cut(age_years, breaks = seq(0,4,1))) %>%
select(id, sex, experience_chicks, age_years, age_group) %>%
arrange(id)
dat %>%
filter(active_nest_collection == 0) %>%
group_by(experience_chicks, age = cut(age_years, breaks = seq(0,4,1)), sex) %>%
tally()
dat %>%
filter(active_nest_collection == 0) %>% tally()
dat %>%
filter(active_nest_collection == 0) %>%
mutate(age_group = cut(age_years, breaks = seq(0,4,1))) %>%
select(id, sex, experience_chicks, age_years, age_group) %>%
arrange(id)
id_list_for_export <-
dat %>%
filter(active_nest_collection == 0) %>%
mutate(age_group = cut(age_years, breaks = seq(0,4,1))) %>%
select(id, sex, experience_chicks, age_years, age_group) %>%
arrange(id)
write.csv(id_list_for_export,"~/Documents/projects/PRL_experience/experience_brains_to_slice_with_id.csv")
768/2
520/2
dat <-reqd.csv("~/Downloads/test_example.csv")
dat <-read.csv("~/Downloads/test_example.csv")
View(dat)
dat <-read.csv("~/Downloads/test_example.csv", row.names = FALSE)
dat <-read.csv("~/Downloads/test_example.csv", row.names = FALSE)
dat <-read.csv("~/Downloads/test_example.csv", row.names = FALSE)
View(dat)
dat <-read.csv("~/Downloads/test_example.csv", row.names = FALSE)
View(dat)
dat <-read.csv("~/Downloads/test_example.csv")
View(dat)
rmarkdown::render("./index.Rmd", output_dir="./docs/", output_file="index.html")
rmarkdown::render("./index.Rmd", output_dir="./docs/", output_file="index.html")
library(knitr)
install.packages(c("cwhmisc", "gdata"))
set_wd("~/Downloads/data_to_play_with/bechdel/")
setwd("~/Downloads/data_to_play_with/bechdel/")
setwd("~/Downloads/data_to_play_with/bechdel")
setwd("~/Downloads/data_to_play_with/bechdel-test/")
rawData<-read.csv("movies.csv", na.strings="#N/A")
rawData<-rawData[rawData$year>1989,]
rawData$intOnly<-rawData$intgross_2013.-rawData$domgross_2013.
# Return on Investment (ROI) measures
rawData$ROI<-rawData$intgross_2013./rawData$budget_2013. #  Total ROI
rawData$ROI1<-rawData$domgross_2013./rawData$budget_2013. #  Domestic ROI
rawData$ROI2<-rawData$intOnly/rawData$budget_2013.  #  International ROI
# Divide movies into FAIL and PASS divisions
failMovies<-rawData[rawData$binary=="FAIL",]
passMovies<-rawData[rawData$binary=="PASS",]
# Include a "generous" category (which includes both "ok" and "dubious" movies)
generous<-rbind(rawData[rawData$clean_test=="ok",], rawData[rawData$clean_test=="dubious",])
median(failMovies$ROI, na.rm=T)
median(passMovies$ROI, na.rm=T)
median(rawData$ROI, na.rm=T)
median(failMovies$ROI, na.rm=T)
median(passMovies$ROI, na.rm=T)
median(rawData$ROI, na.rm=T)
median(failMovies$budget_2013.)
median(passMovies$budget_2013.)
median(rawData$budget_2013.)
hist(rawData$budget_2013.)
hist(log(rawData$budget_2013.))
hist(rawData$ROI)
hist(log(rawData$ROI))
summary(lm(log(intgross_2013.)~log(budget_2013.), data=rawData))
summary(lm(log(intgross_2013.)~log(budget_2013.)+factor(binary), data=rawData))
summary(lm(log(ROI)~log(budget_2013.)+factor(binary), data=rawData))
median(generous$ROI1, na.rm=T)
median(rawData$ROI1[rawData$clean_test=="men"], na.rm=T)
median(rawData$ROI1[rawData$clean_test=="notalk"], na.rm=T)
median(rawData$ROI1[rawData$clean_test=="nowomen"], na.rm=T)
View(rawData)
library(tidyverse)
bechdel <-rawData
colnames(bechdel)
ggplot(bechdel, aes(x = clean_test, y = ROI)) +
geom_col()
ggplot(bechdel, aes(x = clean_test, y = ROI1)) +
geom_col()
levels(bechdel$clean_test)
bechdel$clean_test <- factor(bechdel$clean_test, levels = c("nowomen", "notalk", "men", "dubious", "ok"))
ggplot(bechdel, aes(x = clean_test, y = ROI1)) +
geom_col()
ggplot(bechdel, aes(x = clean_test, y = ROI1, color = binary)) +
geom_col()
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = binary)) +
geom_col()
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = binary)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Pass?")
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = binary)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test")
bechdel$clean_test <- factor(bechdel$clean_test, levels = c("nowomen", "notalk", "men", "dubious", "ok"),
names = c("no women", "women don't talk", "women talk about men", "dubious pass", "pass"))
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = binary)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test")
bechdel$clean_test <- factor(bechdel$clean_test, levels = c("nowomen", "notalk", "men", "dubious", "ok"),
labels = c("no women", "women don't talk", "women talk about men", "dubious pass", "pass"))
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = binary)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test")
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = binary)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
theme_classic()
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = binary)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
theme_bw()
bechdel %>%
group_by(year) %>%
mutate(total_movies = n())
bechdel %>%
group_by(year) %>%
mutate(total_movies = n()) %>%
group_by(year, clean_test) %>%
summarise( n = n())
bechdel %>%
group_by(year) %>%
mutate(total_movies = n()) %>%
group_by(year, clean_test) %>%
summarise( n = n(), perc = n/total_movies)
bechdel %>%
group_by(year) %>%
mutate(total_movies = n()) %>%
group_by(year, clean_test) %>%
summarise( n = n(), total = mean(total_movies), perc = n/total)
pass_over_time <-
bechdel %>%
group_by(year) %>%
mutate(total_movies = n()) %>%
group_by(year, clean_test) %>%
summarise( n = n(), total = mean(total_movies), perc = n/total)
ggplot(data = pass_over_time,
aes(x = year, y = perc, fill = clean_test)) +
geom_bar(stat = 'identity')
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = binary)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
theme_classic()
pass_colors <- c("#d94701","#fd8d3c", "#fdbe85", "#d7b5d8", "#41b6c4")
ggplot(data = pass_over_time,
aes(x = year, y = perc, fill = clean_test)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = pass_colors)
ggplot(data = pass_over_time,
aes(x = year, y = perc, fill = clean_test)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = pass_colors) +
theme_classic()
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = clean_test)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
scale_fill_manual(values = pass_colors) +
theme_classic()
bechdel %>%
group_by(year, binary) %>%
summarise( mean_rev = mean(domgross_2013))
bechdel %>%
group_by(year, binary) %>%
summarise( mean_rev = mean(domgross_2013.))
bechdel %>%
group_by(year, binary) %>%
summarise( mean_rev = mean(domgross_2013.)) %>%
group_by(year) %>%
mutate(sum_rev = sum(mean_rev))
bechdel %>%
group_by(year, binary) %>%
summarise( mean_rev = mean(domgross_2013.)) %>%
filter(binary == "PASS") %>%
ggplot(aes(x = year, y = mean_rev)) +
geom_bar(stat = 'identity')
bechdel %>%
group_by(year, binary) %>%
summarise( mean_rev = mean(domgross_2013., na.rm = TRUE)) %>%
filter(binary == "PASS") %>%
ggplot(aes(x = year, y = mean_rev)) +
geom_bar(stat = 'identity')
bechdel %>%
group_by(year, binary) %>%
summarise( mean_rev = mean(budget_2013., na.rm = TRUE)) %>%
filter(binary == "PASS") %>%
ggplot(aes(x = year, y = mean_rev)) +
geom_bar(stat = 'identity')
bechdel %>%
group_by(year, binary) %>%
summarise( mean_rev = mean(ROI1, na.rm = TRUE)) %>%
filter(binary == "PASS") %>%
ggplot(aes(x = year, y = mean_rev)) +
geom_bar(stat = 'identity')
?slice_min
bechdel %>%
filter(binary == "PASS") %>%
slice_max(order_by = ROI1)
bechdel %>%
filter(binary == "PASS") %>%
slice_max(order_by = ROI1, 10)
bechdel %>%
filter(binary == "PASS") %>%
slice_max(order_by = ROI1, n=10)
bechdel %>%
filter(binary == "PASS") %>%
slice_max(order_by = ROI1, n=10) %>%
select(title, budget, domgross)
bechdel %>%
filter(binary == "PASS") %>%
slice_max(order_by = ROI1, n=10) %>%
select(title, year, budget, domgross)
bechdel %>%
filter(binary == "FAIL") %>%
slice_max(order_by = ROI1, n=10) %>%
select(title, year, clean_test, budget, domgross)
bechdel %>%
filter(binary == "PASS") %>%
slice_max(order_by = domgross_2013., n=10) %>%
select(title, year, budget, domgross)
bechdel %>%
filter(binary == "FAIL") %>%
slice_max(order_by = domgross_2013., n=10) %>%
select(title, year, clean_test, budget, domgross)
bechdel %>%
filter(binary == "PASS") %>%
slice_max(order_by = domgross_2013., n=10) %>%
select(title, year, budget, domgross)
bechdel %>%
filter(binary == "PASS") %>%
slice_max(order_by = ROI1, n=10) %>%
select(title, year, budget, domgross)
bechdel %>%
filter(binary == "FAIL") %>%
slice_max(order_by = ROI1, n=10) %>%
select(title, year, clean_test, budget, domgross)
bechdel %>%
group_by(year, binary) %>%
summarise( mean_rev = mean(budget_2013, na.rm = TRUE)) %>%
filter(binary == "PASS") %>%
ggplot(aes(x = year, y = mean_rev)) +
geom_bar(stat = 'identity')
bechdel %>%
group_by(year, binary) %>%
summarise( mean_rev = mean(budget_2013., na.rm = TRUE)) %>%
filter(binary == "PASS") %>%
ggplot(aes(x = year, y = mean_rev)) +
geom_bar(stat = 'identity')
setwd("~/Desktop/bechdel-test/")
write.csv("data/2021-02-28_bechdel-test_processed.csv", rawData)
write.csv(file = "2021-02-28_bechdel-test_processed.csv", rawData)
bechdel <- read.csv("2021-03-04_bechdel-test_processed.csv")
#graph gross revenue and ROI for pass and fail
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = clean_test)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
scale_fill_manual(values = pass_colors) +
theme_classic()
ggplot(data = pass_over_time,
aes(x = year, y = perc, fill = clean_test)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = pass_colors) +
theme_classic() +
ggtitle("Percent of movies passing the Bechdel test over time")
roi_pass <-
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = clean_test)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
scale_fill_manual(values = pass_colors) +
theme_classic()
ggsave("bechdel-test_figure1.png", roi_pass, width = 5, height = 2, units = "in", dpi = 300)
# Calculates summary statistics and conducts basic regression analysis to determine
# whether movies which pass the Bechdel test do better or worse at the box office,
# using data from www.bechdeltest.com and www.the-numbers.com
# By Andrew Flowers <andrew.flowers@fivethirtyeight.com>
# See also http://fivethirtyeight.com/features/the-dollar-and-cents-case-against-hollywoods-exclusion-of-women/
# Install and load required packages
# install.packages(c("gdata", "cwhmisc"))
library(gdata)
library(cwhmisc)
#set working directory
setwd("~/Desktop/bechdel-test/")
# Load data
rawData<-read.csv("bechdel-test_raw.csv", na.strings="#N/A")
# Select movies pre-1990, and format $-denominated data fields
rawData<-rawData[rawData$year>1989,]
# International-only gross profits (which equal total profits minus domestic profits)
rawData$intOnly<-rawData$intgross_2013.-rawData$domgross_2013.
# Return on Investment (ROI) measures
rawData$ROI<-rawData$intgross_2013./rawData$budget_2013. #  Total ROI
rawData$ROI1<-rawData$domgross_2013./rawData$budget_2013. #  Domestic ROI
rawData$ROI2<-rawData$intOnly/rawData$budget_2013.  #  International ROI
#re-order and rename test levels
rawData$clean_test <- factor(rawData$clean_test, levels = c("nowomen", "notalk", "men", "dubious", "ok"),
labels = c("no women", "women don't talk", "women talk about men", "dubious pass", "pass"))
#save processed data to csv
write.csv(file = "2021-02-28_bechdel-test_processed.csv", rawData)
bechdel <- read.csv("2021-03-04_bechdel-test_processed.csv")
roi_pass <-
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = clean_test)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
scale_fill_manual(values = pass_colors) +
theme_classic()
#save plot
ggsave("bechdel-test_figure1.png", roi_pass, width = 5, height = 2, units = "in", dpi = 300)
rawData$clean_test <- factor(rawData$clean_test, levels = c("nowomen", "notalk", "men", "dubious", "ok"),
labels = c("no women", "women don't talk", "women talk about men", "dubious pass", "pass"))
write.csv(file = "2021-02-28_bechdel-test_processed.csv", rawData)
View(rawData)
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = clean_test)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
scale_fill_manual(values = pass_colors) +
theme_classic()
levels(rawData$clean_test)
bechdel$clean_test <- factor(bechdel$clean_test, levels = c("nowomen", "notalk", "men", "dubious", "ok"),
labels = c("no women", "women don't talk", "women talk about men", "dubious pass", "pass"))
# Calculates summary statistics and conducts basic regression analysis to determine
# whether movies which pass the Bechdel test do better or worse at the box office,
# using data from www.bechdeltest.com and www.the-numbers.com
# By Andrew Flowers <andrew.flowers@fivethirtyeight.com>
# See also http://fivethirtyeight.com/features/the-dollar-and-cents-case-against-hollywoods-exclusion-of-women/
# Install and load required packages
# install.packages(c("gdata", "cwhmisc"))
library(gdata)
library(cwhmisc)
#set working directory
setwd("~/Desktop/bechdel-test/")
# Load data
rawData<-read.csv("bechdel-test_raw.csv", na.strings="#N/A")
# Select movies pre-1990, and format $-denominated data fields
rawData<-rawData[rawData$year>1989,]
# International-only gross profits (which equal total profits minus domestic profits)
rawData$intOnly<-rawData$intgross_2013.-rawData$domgross_2013.
# Return on Investment (ROI) measures
rawData$ROI<-rawData$intgross_2013./rawData$budget_2013. #  Total ROI
rawData$ROI1<-rawData$domgross_2013./rawData$budget_2013. #  Domestic ROI
rawData$ROI2<-rawData$intOnly/rawData$budget_2013.  #  International ROI
#save processed data to csv
write.csv(file = "2021-02-28_bechdel-test_processed.csv", rawData)
bechdel <- read.csv("2021-03-04_bechdel-test_processed.csv")
#create color scheme
pass_colors <- c("#d94701","#fd8d3c", "#fdbe85", "#d7b5d8", "#41b6c4")
#relevel and rename test levels
bechdel$clean_test <- factor(bechdel$clean_test, levels = c("nowomen", "notalk", "men", "dubious", "ok"),
labels = c("no women", "women don't talk", "women talk about men", "dubious pass", "pass"))
roi_pass <-
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = clean_test)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
scale_fill_manual(values = pass_colors) +
theme_classic()
ggsave("bechdel-test_figure1.png", roi_pass, width = 5, height = 2, units = "in", dpi = 300)
roi_pass <-
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = clean_test)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
scale_fill_manual(values = pass_colors) +
theme_classic() + theme(legend_position = "none")
#save plot
ggsave("bechdel-test_figure1.png", roi_pass, width = 5, height = 3, units = "in", dpi = 300)
roi_pass <-
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = clean_test)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
scale_fill_manual(values = pass_colors) +
theme_classic()
#save plot
ggsave("bechdel-test_figure1.png", roi_pass, width = 5, height = 3, units = "in", dpi = 300)
roi_pass <-
ggplot(bechdel, aes(x = clean_test, y = ROI1, fill = clean_test)) +
geom_col() +
labs(x = NULL, y = "Return on investment (domestic)", fill = "Bechdel Test") +
scale_fill_manual(values = pass_colors) +
theme_classic() +
theme(axis.text.x = element_blank())
#save plot
ggsave("bechdel-test_figure1.png", roi_pass, width = 5, height = 3, units = "in", dpi = 300)
#percent passing over time
pass_over_time <-
bechdel %>%
group_by(year) %>%
mutate(total_movies = n()) %>%
group_by(year, clean_test) %>%
summarise( n = n(), total = mean(total_movies), perc = n/total)
fig2<-
ggplot(data = pass_over_time,
aes(x = year, y = perc, fill = clean_test)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = pass_colors) +
theme_classic() +
ggtitle("Percent of movies passing the Bechdel test over time")
#save plots
ggsave("bechdel-test_figure2.png", fig2, width = 6, height = 3, units = "in", dpi = 300)
library(sjPlot)
library(stargazer)
stargazer(top_fail, summary = FALSE, out = "top_fail_roi.txt", type = "text")
top_fail <-
bechdel %>%
filter(binary == "FAIL") %>%
slice_max(order_by = ROI1, n=10) %>%
select(title, year, clean_test, budget, domgross)
stargazer(top_fail, summary = FALSE, out = "top_fail_roi.txt", type = "text")
stargazer(top_fail, title = "Test", summary = FALSE, out = "bechdel-test_table1_top_fail.txt", type = "text")
stargazer(top_fail, title = "Top 10 Movies that Failed by Return-on-Investment", summary = FALSE, out = "bechdel-test_table1_top_fail.txt", type = "text")
library(tidyverse)
library(stargazer)
#set working directory
setwd("~/Desktop/bechdel-test/")
bechdel <- read.csv("2021-03-04_bechdel-test_processed.csv")
# top passing with ROI
top_pass <-
bechdel %>%
filter(binary == "PASS") %>%
slice_max(order_by = ROI1, n=10) %>%
select(title, year, budget, domgross)
stargazer(top_pass, title = "Top 10 Movies that Passed, by Return-on-Investment",
summary = FALSE, out = "bechdel-test_table1.txt", type = "text")
#top failing with ROI
top_fail <-
bechdel %>%
filter(binary == "FAIL") %>%
slice_max(order_by = ROI1, n=10) %>%
select(title, year, clean_test, budget, domgross)
stargazer(top_fail, title = "Top 10 Movies that Failed, by Return-on-Investment",
summary = FALSE, out = "bechdel-test_table2.txt", type = "text")
